{"version":3,"file":"index-493a8083.js","sources":["../../node_modules/.pnpm/@chakra-ui+table@2.0.16_n3dxrjldmk5gnycgnw7noyo5tu/node_modules/@chakra-ui/table/dist/chunk-DJP6PLAX.mjs","../../node_modules/.pnpm/@chakra-ui+table@2.0.16_n3dxrjldmk5gnycgnw7noyo5tu/node_modules/@chakra-ui/table/dist/chunk-7FCBKWFD.mjs","../../node_modules/.pnpm/@chakra-ui+table@2.0.16_n3dxrjldmk5gnycgnw7noyo5tu/node_modules/@chakra-ui/table/dist/chunk-Z3IFIKNA.mjs","../../src/shared/ui/table/new-model.ts","../../src/shared/ui/table/use-table.tsx","../../src/shared/ui/table/index.ts"],"sourcesContent":["import {\n  useTableStyles\n} from \"./chunk-B3MS3L3D.mjs\";\n\n// src/thead.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Thead = forwardRef((props, ref) => {\n  const styles = useTableStyles();\n  return /* @__PURE__ */ jsx(chakra.thead, { ...props, ref, __css: styles.thead });\n});\n\nexport {\n  Thead\n};\n","// src/table-container.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar TableContainer = forwardRef(\n  (props, ref) => {\n    var _a;\n    const { overflow, overflowX, className, ...rest } = props;\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ref,\n        className: cx(\"chakra-table__container\", className),\n        ...rest,\n        __css: {\n          display: \"block\",\n          whiteSpace: \"nowrap\",\n          WebkitOverflowScrolling: \"touch\",\n          overflowX: (_a = overflow != null ? overflow : overflowX) != null ? _a : \"auto\",\n          overflowY: \"hidden\",\n          maxWidth: \"100%\"\n        }\n      }\n    );\n  }\n);\n\nexport {\n  TableContainer\n};\n","import {\n  useTableStyles\n} from \"./chunk-B3MS3L3D.mjs\";\n\n// src/th.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Th = forwardRef(\n  ({ isNumeric, ...rest }, ref) => {\n    const styles = useTableStyles();\n    return /* @__PURE__ */ jsx(\n      chakra.th,\n      {\n        ...rest,\n        ref,\n        __css: styles.th,\n        \"data-is-numeric\": isNumeric\n      }\n    );\n  }\n);\n\nexport {\n  Th\n};\n","import { createEvent, createStore, sample, type Store } from 'effector'\n\nexport type TableState = {\n\trowSelect: Record<number, boolean>\n\trowExtend: Record<number, boolean>\n}\n\nexport interface CreateTableOptions<T, K> {\n\tdata: Store<T>\n\ttableGenerateCb: (data: T) => K\n\ttableState?: Store<K>\n\tdefaultState?: K\n\tisSelect?: boolean\n\tisExtend?: boolean\n}\n\nexport function createTable<T, K extends Record<string, any> = TableState>(options: CreateTableOptions<T, K>) {\n\tconst { data, tableState, tableGenerateCb, defaultState, isSelect = false, isExtend = false } = options\n\n\tconst currentRowSettled = createEvent<number>()\n\n\tconst rowSelected = createRowEvent<{ rowIndex: number }>()\n\tconst allRowSelected = createEvent<{ value: boolean }>()\n\n\tconst rowExtended = createRowEvent<{ rowIndex: number }>()\n\tconst allRowExtended = createEvent<{ value: boolean }>()\n\n\tconst tableReset = createEvent<void>()\n\n\tconst $defaultTableState = createStore<K>(defaultState ? defaultState : ({} as K))\n\tconst $tableState = tableState ? tableState : $defaultTableState\n\n\tconst $currentRow = createStore<number | null>(null)\n\n\t$tableState.on(data, (state, data) => tableGenerateCb(data))\n\t$currentRow.on(currentRowSettled, (state, rowIndex) => rowIndex)\n\n\tif (isSelect) {\n\t\t$tableState.on(rowSelected, (state, { rowIndex }) => ({\n\t\t\t...state,\n\t\t\trowSelect: {\n\t\t\t\t...state.rowSelect,\n\t\t\t\t[rowIndex]: state.rowSelect[rowIndex] ? !state.rowSelect[rowIndex] : true,\n\t\t\t},\n\t\t}))\n\n\t\t$tableState.on(allRowSelected, (state, { value }) => ({\n\t\t\t...state,\n\t\t\trowSelect: Object.keys(state.rowSelect).reduce((acc, key) => {\n\t\t\t\tacc[key] = value\n\t\t\t\treturn acc\n\t\t\t}, {} as Record<number, boolean>),\n\t\t}))\n\t}\n\n\tif (isExtend) {\n\t\t$tableState.on(rowExtended, (state, { rowIndex }) => ({\n\t\t\t...state,\n\t\t\trowExtend: {\n\t\t\t\t...state.rowExtend,\n\t\t\t\t[rowIndex]: !state.rowExtend[rowIndex],\n\t\t\t},\n\t\t}))\n\n\t\t$tableState.on(allRowExtended, (state, { value }) => ({\n\t\t\t...state,\n\t\t\trowExtend: Object.keys(state.rowExtend).reduce((acc, key) => {\n\t\t\t\tacc[key] = value\n\t\t\t\treturn acc\n\t\t\t}, {} as Record<number, boolean>),\n\t\t}))\n\t}\n\n\tsample({\n\t\tclock: tableReset,\n\t\tsource: data,\n\t\tfn: (data) => tableGenerateCb(data),\n\t\ttarget: $tableState,\n\t})\n\n\tfunction createRowEvent<T extends { rowIndex: number }>() {\n\t\tconst rowEvent = createEvent<T>()\n\t\tsample({\n\t\t\tclock: rowEvent,\n\t\t\tfn: ({ rowIndex }) => rowIndex,\n\t\t\ttarget: currentRowSettled,\n\t\t})\n\t\treturn rowEvent\n\t}\n\n\treturn {\n\t\tcreateRowEvent,\n\t\tcurrentRowSettled,\n\t\trowSelected,\n\t\tallRowSelected,\n\t\trowExtended,\n\t\tallRowExtended,\n\t\ttableReset,\n\t\t$tableState,\n\t\t$currentRow,\n\t}\n}\n","import React from 'react'\n\nexport interface Column<T = {}, K = {}> {\n\theader: (params: { data: T[]; item: T; rowIndex: number; columnIndex: number; tableState: K }) => React.ReactNode\n\tcell: (params: { data: T[]; item: T; rowIndex: number; columnIndex: number; tableState: K }) => React.ReactNode\n}\n\ninterface UseTableProps<T, K> {\n\tdata: T[]\n\tcolumns: Column<T, K>[]\n\ttableState: K\n}\n\nexport function useTable<T, K>(props: UseTableProps<T, K>) {\n\tconst { data, columns, tableState } = props\n\n\tconst getHeaders = React.useCallback(() => {\n\t\treturn columns.map((column, columnIndex) => {\n\t\t\treturn column.header({ data, item: data[0]!, rowIndex: 0, columnIndex, tableState })\n\t\t})\n\t}, [data, columns, tableState])\n\n\tconst getCells = React.useCallback(() => {\n\t\treturn data.map((item, rowIndex) => {\n\t\t\treturn columns.map((column, columnIndex) => {\n\t\t\t\treturn (\n\t\t\t\t\t<React.Fragment key={columnIndex}>\n\t\t\t\t\t\t{column.cell({ data, item, rowIndex, columnIndex, tableState })}\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t)\n\t\t\t})\n\t\t})\n\t}, [data, columns, tableState])\n\n\treturn { getHeaders, getCells }\n}\n","import { createTable } from './new-model'\nimport { Table, TableContainer, TBody, Td, Th, THead, Tr } from './ui'\n\nexport * from './new-model'\n\nexport * from './use-table'\n\nexport const TableFactory = {\n\tTable,\n\tTableContainer,\n\tTBody,\n\tTd,\n\tTh,\n\tTHead,\n\tTr,\n\tcreateTable,\n}\n"],"names":["Thead","forwardRef","props","ref","styles","useTableStyles","jsx","chakra","TableContainer","_a","overflow","overflowX","className","rest","cx","Th","isNumeric","createTable","options","data","tableState","tableGenerateCb","defaultState","isSelect","isExtend","currentRowSettled","createEvent","rowSelected","createRowEvent","allRowSelected","rowExtended","allRowExtended","tableReset","$defaultTableState","createStore","$tableState","$currentRow","state","rowIndex","value","acc","key","sample","rowEvent","useTable","columns","getHeaders","React","column","columnIndex","getCells","item","TableFactory","Table","TBody","Td","THead","Tr"],"mappings":"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"}