{"version":3,"file":"use-pagination-80abf61b.js","sources":["../../src/shared/ui/pagination/ui.tsx","../../src/shared/ui/pagination/use-pagination.ts"],"sourcesContent":["import { ArrowLeftIcon, ArrowRightIcon, ChevronLeftIcon, ChevronRightIcon } from '@chakra-ui/icons'\nimport { Button, ButtonGroup } from '@chakra-ui/react'\n\nexport function Pagination(props: {\n\tpages: number[]\n\tcurrentPage: number\n\tonFirstClick: () => void\n\tonLastClick: () => void\n\tonPageChange: (page: number) => void\n}) {\n\tconst { pages, currentPage, onFirstClick, onLastClick, onPageChange } = props\n\tconsole.log(currentPage === pages[pages.length - 1])\n\n\treturn (\n\t\t<ButtonGroup colorScheme='blue' variant='outline'>\n\t\t\t<Button onClick={onFirstClick}>\n\t\t\t\t<ArrowLeftIcon />\n\t\t\t</Button>\n\t\t\t<Button isDisabled={currentPage === pages[0]} onClick={() => onPageChange(currentPage - 1)}>\n\t\t\t\t<ChevronLeftIcon />\n\t\t\t</Button>\n\t\t\t{pages.map((page, index) => (\n\t\t\t\t<Button key={index} isActive={page === currentPage} onClick={() => onPageChange(page)}>\n\t\t\t\t\t{page}\n\t\t\t\t</Button>\n\t\t\t))}\n\t\t\t<Button isDisabled={currentPage === pages[pages.length - 1]} onClick={() => onPageChange(currentPage + 1)}>\n\t\t\t\t<ChevronRightIcon />\n\t\t\t</Button>\n\t\t\t<Button onClick={onLastClick}>\n\t\t\t\t<ArrowRightIcon />\n\t\t\t</Button>\n\t\t</ButtonGroup>\n\t)\n}\n","import React from 'react'\n\nexport function usePagination<T>(options: { data: T[]; perPage: number; maxPages: number }) {\n\tconst [currentPage, setCurrentPage] = React.useState(1)\n\tconst maxPage = Math.ceil(options.data.length / options.perPage)\n\n\tconst startPage = currentPage <= Math.floor(options.maxPages / 2) ? 1 : currentPage - Math.floor(options.maxPages / 2)\n\tconst endPage =\n\t\tstartPage + options.maxPages - 1 > options.data.length / options.perPage\n\t\t\t? Math.ceil(options.data.length / options.perPage)\n\t\t\t: startPage + options.maxPages - 1\n\tconst pages: number[] = []\n\n\tfor (let i = startPage; i <= endPage; i++) {\n\t\tpages.push(i)\n\t}\n\n\tconst indexOfLastPage = currentPage * options.perPage\n\tconst indexOfFirstPage = indexOfLastPage - options.perPage\n\tconst currentData = options.data.slice(indexOfFirstPage, indexOfLastPage)\n\n\treturn { currentPage, setCurrentPage, currentData, maxPage, pages }\n}\n"],"names":["Pagination","props","pages","currentPage","onFirstClick","onLastClick","onPageChange","jsxs","ButtonGroup","jsx","Button","ArrowLeftIcon","ChevronLeftIcon","page","index","ChevronRightIcon","ArrowRightIcon","usePagination","options","setCurrentPage","React","maxPage","startPage","endPage","i","indexOfLastPage","indexOfFirstPage","currentData"],"mappings":"kTAGO,SAASA,EAAWC,EAMxB,CACF,KAAM,CAAE,MAAAC,EAAO,YAAAC,EAAa,aAAAC,EAAc,YAAAC,EAAa,aAAAC,CAAiB,EAAAL,EACxE,eAAQ,IAAIE,IAAgBD,EAAMA,EAAM,OAAS,CAAC,CAAC,EAGjDK,EAAAC,EAAA,CAAY,YAAY,OAAO,QAAQ,UACvC,SAAA,CAAAC,EAACC,EAAO,CAAA,QAASN,EAChB,SAAAK,EAACE,GAAc,CAAA,EAChB,EACCF,EAAAC,EAAA,CAAO,WAAYP,IAAgBD,EAAM,CAAC,EAAG,QAAS,IAAMI,EAAaH,EAAc,CAAC,EACxF,SAAAM,EAACG,GAAgB,CAAA,EAClB,EACCV,EAAM,IAAI,CAACW,EAAMC,MAChBJ,EAAmB,CAAA,SAAUG,IAASV,EAAa,QAAS,IAAMG,EAAaO,CAAI,EAClF,SAAAA,CAAA,EADWC,CAEb,CACA,IACAJ,EAAO,CAAA,WAAYP,IAAgBD,EAAMA,EAAM,OAAS,CAAC,EAAG,QAAS,IAAMI,EAAaH,EAAc,CAAC,EACvG,SAAAM,EAACM,GAAiB,CAAA,EACnB,IACCL,EAAO,CAAA,QAASL,EAChB,SAAAI,EAACO,GAAe,CAAA,EACjB,CACD,CAAA,CAAA,CAEF,CChCO,SAASC,EAAiBC,EAA2D,CAC3F,KAAM,CAACf,EAAagB,CAAc,EAAIC,EAAM,SAAS,CAAC,EAChDC,EAAU,KAAK,KAAKH,EAAQ,KAAK,OAASA,EAAQ,OAAO,EAEzDI,EAAYnB,GAAe,KAAK,MAAMe,EAAQ,SAAW,CAAC,EAAI,EAAIf,EAAc,KAAK,MAAMe,EAAQ,SAAW,CAAC,EAC/GK,EACLD,EAAYJ,EAAQ,SAAW,EAAIA,EAAQ,KAAK,OAASA,EAAQ,QAC9D,KAAK,KAAKA,EAAQ,KAAK,OAASA,EAAQ,OAAO,EAC/CI,EAAYJ,EAAQ,SAAW,EAC7BhB,EAAkB,CAAA,EAExB,QAASsB,EAAIF,EAAWE,GAAKD,EAASC,IACrCtB,EAAM,KAAKsB,CAAC,EAGP,MAAAC,EAAkBtB,EAAce,EAAQ,QACxCQ,EAAmBD,EAAkBP,EAAQ,QAC7CS,EAAcT,EAAQ,KAAK,MAAMQ,EAAkBD,CAAe,EAExE,MAAO,CAAE,YAAAtB,EAAa,eAAAgB,EAAgB,YAAAQ,EAAa,QAAAN,EAAS,MAAAnB,CAAM,CACnE"}