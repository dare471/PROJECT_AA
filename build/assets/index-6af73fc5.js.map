{"version":3,"file":"index-6af73fc5.js","sources":["../../src/entities/client/ui/client-badge.tsx","../../src/entities/client/ui/client-plot-card.tsx","../../src/entities/client/ui/client-plots.tsx","../../src/entities/client/index.ts"],"sourcesContent":["import { Badge, type BadgeProps } from '@chakra-ui/react'\n\ninterface ClientBadgeProps extends BadgeProps {\n\tguid: boolean\n}\n\nexport function ClientBadge(props: ClientBadgeProps) {\n\tconst { guid } = props\n\n\tif (guid) {\n\t\treturn <Badge colorScheme='green'>Постоянный</Badge>\n\t} else {\n\t\treturn <Badge colorScheme='red'>Новый</Badge>\n\t}\n}\n","import { Card, CardBody, Text } from '@chakra-ui/react'\n\nimport { type ClientPlot } from '~src/shared/api'\nimport { DescriptionText } from '~src/shared/ui'\n\ninterface ClientPlotCardProps {\n\tclientPlot: ClientPlot\n\tonClick: (args: { plotId: number }) => void\n}\n\nexport function ClientPlotCard(props: ClientPlotCardProps) {\n\tconst { clientPlot, onClick } = props\n\treturn (\n\t\t<Card onClick={() => onClick({ plotId: clientPlot.plotId })}>\n\t\t\t<CardBody>\n\t\t\t\t<Text fontSize='xl' fontWeight='bold'>\n\t\t\t\t\t{clientPlot.plotName}\n\t\t\t\t</Text>\n\t\t\t\t<DescriptionText title='Культура поля:'>{clientPlot.plotCultName}</DescriptionText>\n\t\t\t\t<DescriptionText title='Обьем поля:'>{clientPlot.plotArea}.Га</DescriptionText>\n\t\t\t</CardBody>\n\t\t</Card>\n\t)\n}\n","import {\n\tAccordion,\n\tAccordionButton,\n\tAccordionItem,\n\tAccordionPanel,\n\tBox,\n\tCard,\n\tCardBody,\n\tCenter,\n\tSpinner,\n\tStack,\n\ttype StackProps,\n\tText,\n} from '@chakra-ui/react'\nimport { useUnit } from 'effector-react'\n\nimport { DescriptionText } from '~src/shared/ui'\n\nimport type { createClientPlots } from '../model'\nimport { ClientBadge } from './client-badge'\nimport { ClientPlotCard } from './client-plot-card'\n\ninterface ClientPlotsProps extends StackProps {\n\tmodel: ReturnType<typeof createClientPlots>\n\tonPlotClick: (args: { plotId: number }) => void\n}\n\nexport function ClientPlots(props: ClientPlotsProps) {\n\tconst { model, onPlotClick, ...otherProps } = props\n\tconst [client, clientPlots, clientPending] = useUnit([model.$client, model.$clientPlots, model.$clientPlotsPending])\n\n\tif (clientPending) {\n\t\treturn (\n\t\t\t<Center>\n\t\t\t\t<Spinner />\n\t\t\t</Center>\n\t\t)\n\t}\n\n\treturn (\n\t\t<Stack {...otherProps}>\n\t\t\t{client && clientPlots.length !== 0 ? (\n\t\t\t\t<>\n\t\t\t\t\t<Accordion allowToggle bg='white' pos='sticky' top='0' zIndex='1'>\n\t\t\t\t\t\t<AccordionItem>\n\t\t\t\t\t\t\t<AccordionButton>Информация по клиенту</AccordionButton>\n\t\t\t\t\t\t\t<AccordionPanel>\n\t\t\t\t\t\t\t\t<Card variant='filled'>\n\t\t\t\t\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t\t\t\t\t<Stack>\n\t\t\t\t\t\t\t\t\t\t\t<Stack direction='row'>\n\t\t\t\t\t\t\t\t\t\t\t\t<Text fontSize='xl' fontWeight='bold'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{client.clientName}\n\t\t\t\t\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<ClientBadge guid={client.guid} />\n\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t</Stack>\n\t\t\t\t\t\t\t\t\t\t\t<DescriptionText title='Иин/Бин:'>{client.clientBin}</DescriptionText>\n\t\t\t\t\t\t\t\t\t\t\t<DescriptionText title='Адрес:'>{client.clientAddress}</DescriptionText>\n\t\t\t\t\t\t\t\t\t\t\t<DescriptionText title='Деятельность:'>{client.clientActivity}</DescriptionText>\n\t\t\t\t\t\t\t\t\t\t</Stack>\n\t\t\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t</AccordionPanel>\n\t\t\t\t\t\t</AccordionItem>\n\t\t\t\t\t</Accordion>\n\t\t\t\t\t<Stack>\n\t\t\t\t\t\t{clientPlots.map((clientPlot, index) => (\n\t\t\t\t\t\t\t<ClientPlotCard key={index} clientPlot={clientPlot} onClick={onPlotClick} />\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Stack>\n\t\t\t\t</>\n\t\t\t) : (\n\t\t\t\t<Center>Нету данных</Center>\n\t\t\t)}\n\t\t</Stack>\n\t)\n}\n","import { createClientAnalyticsByYear, createClientPlots } from './model'\nimport { ClientAnalyticsByYear, ClientPlots } from './ui'\n\nexport {\n\tClientShortCard,\n\tClientCard,\n\tClientContacts,\n\tClientContactCard,\n\tClientLastContractCard,\n\tClientContractCard,\n} from './ui'\nexport {\n\tcreateClientsLand,\n\tcreateClient,\n\tcreateClients,\n\tfilterClientsPlotsInCircleFx,\n\tcreateClientManagers,\n\tcreateClientSubsidies,\n\tcreateClientContracts,\n\tcreateClientLastContract,\n\tcreateClientPoints,\n} from './model'\n\nexport const ClientAnalyticsByYearFactory = {\n\tClientAnalyticsByYear,\n\tcreateClientAnalyticsByYear,\n}\n\nexport const ClientPlotsFactory = {\n\tClientPlots,\n\tcreateClientPlots,\n}\n"],"names":["ClientBadge","props","guid","jsx","Badge","ClientPlotCard","clientPlot","onClick","Card","jsxs","CardBody","Text","DescriptionText","ClientPlots","model","onPlotClick","otherProps","client","clientPlots","clientPending","useUnit","Center","Spinner","Stack","Fragment","Accordion","AccordionItem","AccordionButton","AccordionPanel","Box","index","ClientPlotsFactory","createClientPlots"],"mappings":"mWAMO,SAASA,EAAYC,EAAyB,CAC9C,KAAA,CAAE,KAAAC,CAAS,EAAAD,EAEjB,OAAIC,EACKC,EAAAC,EAAA,CAAM,YAAY,QAAQ,SAAU,YAAA,CAAA,EAEpCD,EAAAC,EAAA,CAAM,YAAY,MAAM,SAAK,OAAA,CAAA,CAEvC,CCJO,SAASC,EAAeJ,EAA4B,CACpD,KAAA,CAAE,WAAAK,EAAY,QAAAC,CAAY,EAAAN,EAChC,OACEE,EAAAK,EAAA,CAAK,QAAS,IAAMD,EAAQ,CAAE,OAAQD,EAAW,MAAO,CAAC,EACzD,SAAAG,EAACC,EACA,CAAA,SAAA,CAAAP,EAACQ,GAAK,SAAS,KAAK,WAAW,OAC7B,WAAW,SACb,EACCR,EAAAS,EAAA,CAAgB,MAAM,iBAAkB,WAAW,aAAa,EACjEH,EAACG,EAAgB,CAAA,MAAM,cAAe,SAAA,CAAWN,EAAA,SAAS,KAAA,EAAG,CAAA,CAC9D,CAAA,CACD,CAAA,CAEF,CCIO,SAASO,EAAYZ,EAAyB,CACpD,KAAM,CAAE,MAAAa,EAAO,YAAAC,EAAa,GAAGC,GAAef,EACxC,CAACgB,EAAQC,EAAaC,CAAa,EAAIC,EAAQ,CAACN,EAAM,QAASA,EAAM,aAAcA,EAAM,mBAAmB,CAAC,EAEnH,OAAIK,EAEDhB,EAAAkB,EAAA,CACA,SAAClB,EAAAmB,EAAA,CAAA,CAAQ,CACV,CAAA,EAKDnB,EAACoB,GAAO,GAAGP,EACT,YAAUE,EAAY,SAAW,EAEhCT,EAAAe,EAAA,CAAA,SAAA,CAAArB,EAACsB,EAAU,CAAA,YAAW,GAAC,GAAG,QAAQ,IAAI,SAAS,IAAI,IAAI,OAAO,IAC7D,SAAAhB,EAACiB,EACA,CAAA,SAAA,CAAAvB,EAACwB,GAAgB,SAAqB,uBAAA,CAAA,EACtCxB,EAACyB,GACA,SAACzB,EAAAK,EAAA,CAAK,QAAQ,SACb,SAAAL,EAACO,EACA,CAAA,SAAAD,EAACc,EACA,CAAA,SAAA,CAACd,EAAAc,EAAA,CAAM,UAAU,MAChB,SAAA,CAAApB,EAACQ,GAAK,SAAS,KAAK,WAAW,OAC7B,WAAO,WACT,IACCkB,EACA,CAAA,SAAA1B,EAACH,GAAY,KAAMiB,EAAO,IAAM,CAAA,EACjC,CAAA,EACD,EACCd,EAAAS,EAAA,CAAgB,MAAM,WAAY,WAAO,UAAU,EACnDT,EAAAS,EAAA,CAAgB,MAAM,SAAU,WAAO,cAAc,EACrDT,EAAAS,EAAA,CAAgB,MAAM,gBAAiB,WAAO,eAAe,CAAA,EAC/D,CAAA,CACD,CACD,CAAA,EACD,CAAA,CAAA,CACD,CACD,CAAA,EACCT,EAAAoB,EAAA,CACC,SAAYL,EAAA,IAAI,CAACZ,EAAYwB,IAC5B3B,EAAAE,EAAA,CAA2B,WAAAC,EAAwB,QAASS,CAAxC,EAAAe,CAAqD,CAC1E,EACF,CAAA,CACD,CAAA,EAEA3B,EAACkB,EAAO,CAAA,SAAA,aAAA,CAAW,CAErB,CAAA,CAEF,CClDO,MAAMU,EAAqB,CACjC,YAAAlB,EACA,kBAAAmB,CACD"}