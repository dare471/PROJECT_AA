{"version":3,"file":"use-table-4435abed.js","sources":["../../src/shared/ui/table/use-table.tsx"],"sourcesContent":["import React from 'react'\n\nexport interface Column<T = {}, K = {}> {\n\theader: (params: { data: T[]; item: T; rowIndex: number; columnIndex: number; tableState: K }) => React.ReactNode\n\tcell: (params: { data: T[]; item: T; rowIndex: number; columnIndex: number; tableState: K }) => React.ReactNode\n}\n\ninterface UseTableProps<T, K> {\n\tdata: T[]\n\tcolumns: Column<T, K>[]\n\ttableState: K\n}\n\nexport function useTable<T, K>(props: UseTableProps<T, K>) {\n\tconst { data, columns, tableState } = props\n\n\tconst getHeaders = React.useCallback(() => {\n\t\treturn columns.map((column, columnIndex) => {\n\t\t\treturn column.header({ data, item: data[0]!, rowIndex: 0, columnIndex, tableState })\n\t\t})\n\t}, [data, columns, tableState])\n\n\tconst getCells = React.useCallback(() => {\n\t\treturn data.map((item, rowIndex) => {\n\t\t\treturn columns.map((column, columnIndex) => {\n\t\t\t\treturn (\n\t\t\t\t\t<React.Fragment key={columnIndex}>\n\t\t\t\t\t\t{column.cell({ data, item, rowIndex, columnIndex, tableState })}\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t)\n\t\t\t})\n\t\t})\n\t}, [data, columns, tableState])\n\n\treturn { getHeaders, getCells }\n}\n"],"names":["useTable","props","data","columns","tableState","getHeaders","React","column","columnIndex","getCells","item","rowIndex","jsx"],"mappings":"+CAaO,SAASA,EAAeC,EAA4B,CAC1D,KAAM,CAAE,KAAAC,EAAM,QAAAC,EAAS,WAAAC,CAAA,EAAeH,EAEhCI,EAAaC,EAAM,YAAY,IAC7BH,EAAQ,IAAI,CAACI,EAAQC,IACpBD,EAAO,OAAO,CAAE,KAAAL,EAAM,KAAMA,EAAK,CAAC,EAAI,SAAU,EAAG,YAAAM,EAAa,WAAAJ,CAAY,CAAA,CACnF,EACC,CAACF,EAAMC,EAASC,CAAU,CAAC,EAExBK,EAAWH,EAAM,YAAY,IAC3BJ,EAAK,IAAI,CAACQ,EAAMC,IACfR,EAAQ,IAAI,CAACI,EAAQC,IAEzBI,EAAAN,EAAM,SAAN,CACC,WAAO,KAAK,CAAE,KAAAJ,EAAM,KAAAQ,EAAM,SAAAC,EAAU,YAAAH,EAAa,WAAAJ,CAAW,CAAC,GAD1CI,CAErB,CAED,CACD,EACC,CAACN,EAAMC,EAASC,CAAU,CAAC,EAEvB,MAAA,CAAE,WAAAC,EAAY,SAAAI,EACtB"}