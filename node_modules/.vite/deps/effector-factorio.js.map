{
  "version": 3,
  "sources": ["../../.pnpm/effector-factorio@0.4.0_h4ij6u274dp7q2sfbxpq3srcnu/node_modules/effector-factorio/dist/esm/index.js"],
  "sourcesContent": ["import { createContext, useContext } from 'react';\nimport { is } from 'effector';\nimport { jsx } from 'react/jsx-runtime';\n\nfunction removeNonUnit(shape) {\n  return Object.keys(shape).reduce((acc, key) => {\n    const value = shape[key];\n\n    if (is.unit(value)) {\n      // @ts-expect-error\n      acc[key] = value;\n    }\n\n    return acc;\n  }, {});\n}\n\nfunction removeStorePrefix(shape) {\n  return Object.keys(shape).reduce((acc, key) => {\n    const unprefixedKey = key.replace(/^\\$/, ''); // @ts-expect-error\n\n    acc[unprefixedKey] = shape[key];\n    return acc;\n  }, {});\n}\n\nconst modelFactory = creator => {\n  // @ts-expect-error\n  const ModelContext = /*#__PURE__*/createContext(null);\n\n  const useModel = () => {\n    const model = useContext(ModelContext);\n\n    if (!model) {\n      throw new Error('No model found');\n    }\n\n    return model;\n  };\n\n  const unitShape = () => {\n    const model = useModel();\n    const modelUnits = removeNonUnit(model);\n    return removeStorePrefix(modelUnits);\n  };\n\n  return {\n    /** Function that returns new `model` instance */\n    createModel: creator,\n\n    /** Hook that returns current `model` instance */\n    useModel,\n\n    /** `Provider` to pass current `model` instance into */\n    Provider: ModelContext.Provider,\n    '@@unitShape': unitShape\n  };\n};\n\n/**\r\n * HOC that wraps your `View` into model `Provider`. Also adds `model` prop that will be passed into `Provider`\r\n * @param factory Factory that will be passed through Context\r\n * @param View Root component that will be wrapped into Context\r\n * @returns Wrapped component\r\n */\nconst modelView = (factory, View) => {\n  const Render = props => {\n    return /*#__PURE__*/jsx(factory.Provider, {\n      value: props.model,\n      children: /*#__PURE__*/jsx(View, { ...props\n      })\n    });\n  }; // `as` is used for a better \"Go To Definition\"\n\n\n  return Render;\n};\n\nexport { modelFactory, modelView };\n"],
  "mappings": ";;;;;;;;;;;;;;AAAA,mBAA0C;AAE1C,yBAAoB;AAEpB,SAAS,cAAc,OAAO;AAC5B,SAAO,OAAO,KAAK,KAAK,EAAE,OAAO,CAAC,KAAK,QAAQ;AAC7C,UAAM,QAAQ,MAAM,GAAG;AAEvB,QAAI,GAAG,KAAK,KAAK,GAAG;AAElB,UAAI,GAAG,IAAI;AAAA,IACb;AAEA,WAAO;AAAA,EACT,GAAG,CAAC,CAAC;AACP;AAEA,SAAS,kBAAkB,OAAO;AAChC,SAAO,OAAO,KAAK,KAAK,EAAE,OAAO,CAAC,KAAK,QAAQ;AAC7C,UAAM,gBAAgB,IAAI,QAAQ,OAAO,EAAE;AAE3C,QAAI,aAAa,IAAI,MAAM,GAAG;AAC9B,WAAO;AAAA,EACT,GAAG,CAAC,CAAC;AACP;AAEA,IAAM,eAAe,aAAW;AAE9B,QAAM,mBAA4B,4BAAc,IAAI;AAEpD,QAAM,WAAW,MAAM;AACrB,UAAM,YAAQ,yBAAW,YAAY;AAErC,QAAI,CAAC,OAAO;AACV,YAAM,IAAI,MAAM,gBAAgB;AAAA,IAClC;AAEA,WAAO;AAAA,EACT;AAEA,QAAM,YAAY,MAAM;AACtB,UAAM,QAAQ,SAAS;AACvB,UAAM,aAAa,cAAc,KAAK;AACtC,WAAO,kBAAkB,UAAU;AAAA,EACrC;AAEA,SAAO;AAAA;AAAA,IAEL,aAAa;AAAA;AAAA,IAGb;AAAA;AAAA,IAGA,UAAU,aAAa;AAAA,IACvB,eAAe;AAAA,EACjB;AACF;AAQA,IAAM,YAAY,CAAC,SAAS,SAAS;AACnC,QAAM,SAAS,WAAS;AACtB,eAAoB,wBAAI,QAAQ,UAAU;AAAA,MACxC,OAAO,MAAM;AAAA,MACb,cAAuB,wBAAI,MAAM;AAAA,QAAE,GAAG;AAAA,MACtC,CAAC;AAAA,IACH,CAAC;AAAA,EACH;AAGA,SAAO;AACT;",
  "names": []
}
