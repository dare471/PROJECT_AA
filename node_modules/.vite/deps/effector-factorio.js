import {
  ae
} from "./chunk-RGWNF6XI.js";
import {
  require_jsx_runtime
} from "./chunk-DOX2A7CZ.js";
import {
  require_react
} from "./chunk-QSTP2CRO.js";
import {
  __toESM
} from "./chunk-TFWDKVI3.js";

// node_modules/.pnpm/effector-factorio@0.4.0_h4ij6u274dp7q2sfbxpq3srcnu/node_modules/effector-factorio/dist/esm/index.js
var import_react = __toESM(require_react());
var import_jsx_runtime = __toESM(require_jsx_runtime());
function removeNonUnit(shape) {
  return Object.keys(shape).reduce((acc, key) => {
    const value = shape[key];
    if (ae.unit(value)) {
      acc[key] = value;
    }
    return acc;
  }, {});
}
function removeStorePrefix(shape) {
  return Object.keys(shape).reduce((acc, key) => {
    const unprefixedKey = key.replace(/^\$/, "");
    acc[unprefixedKey] = shape[key];
    return acc;
  }, {});
}
var modelFactory = (creator) => {
  const ModelContext = (0, import_react.createContext)(null);
  const useModel = () => {
    const model = (0, import_react.useContext)(ModelContext);
    if (!model) {
      throw new Error("No model found");
    }
    return model;
  };
  const unitShape = () => {
    const model = useModel();
    const modelUnits = removeNonUnit(model);
    return removeStorePrefix(modelUnits);
  };
  return {
    /** Function that returns new `model` instance */
    createModel: creator,
    /** Hook that returns current `model` instance */
    useModel,
    /** `Provider` to pass current `model` instance into */
    Provider: ModelContext.Provider,
    "@@unitShape": unitShape
  };
};
var modelView = (factory, View) => {
  const Render = (props) => {
    return (0, import_jsx_runtime.jsx)(factory.Provider, {
      value: props.model,
      children: (0, import_jsx_runtime.jsx)(View, {
        ...props
      })
    });
  };
  return Render;
};
export {
  modelFactory,
  modelView
};
//# sourceMappingURL=effector-factorio.js.map
