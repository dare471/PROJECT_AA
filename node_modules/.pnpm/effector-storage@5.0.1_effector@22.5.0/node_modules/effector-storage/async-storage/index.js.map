{"version":3,"file":"index.js","sources":["../../src/async-storage/index.ts"],"sourcesContent":["import type { StorageAdapter } from '..'\n\nexport interface AsyncStorage {\n  getItem: (key: string) => Promise<string | null>\n  setItem: (key: string, value: string) => Promise<void>\n}\n\nexport interface AsyncStorageConfig {\n  storage: AsyncStorage\n  serialize?: (value: any) => string\n  deserialize?: (value: string) => any\n}\n\n/**\n * Generic `AsyncStorage` adapter factory\n */\nexport function asyncStorage({\n  storage,\n  serialize = JSON.stringify,\n  deserialize = JSON.parse,\n}: AsyncStorageConfig): StorageAdapter {\n  const adapter: StorageAdapter = <State>(key: string) => ({\n    async get() {\n      const item = await storage.getItem(key)\n      return item === null ? undefined : deserialize(item)\n    },\n\n    async set(value: State) {\n      await storage.setItem(key, serialize(value))\n    },\n  })\n\n  adapter.keyArea = storage\n  return adapter\n}\n"],"names":["asyncStorage","storage","serialize","JSON","stringify","deserialize","parse","adapter","key","async","item","getItem","undefined","value","setItem","keyArea"],"mappings":"AAgBO,SAASA,GAAaC,QAC3BA,EAD2BC,UAE3BA,EAAYC,KAAKC,UAFUC,YAG3BA,EAAcF,KAAKG,QAEnB,IAAMC,EAAkCC,IAAiB,CACvDC,YACE,IAAMC,QAAaT,EAAQU,QAAQH,GACnC,OAAgB,OAATE,OAAgBE,EAAYP,EAAYK,EAHM,EAMvDD,UAAUI,SACFZ,EAAQa,QAAQN,EAAKN,EAAUW,GACtC,IAIH,OADAN,EAAQQ,QAAUd,EACXM,CACR"}