{"version":3,"file":"index.js","sources":["../src/area.ts","../src/persist.ts","../src/index.ts"],"sourcesContent":["import type { Store } from 'effector'\nimport { createStore } from 'effector'\n\n/**\n * Keys areas / namespaces cache\n */\nconst areas = new Map<any, Map<string, Store<any>>>()\n\n/**\n * Get store, responsible for the key in key area / namespace\n */\nexport function getAreaStorage<State>(keyArea: any, key: string): Store<State> {\n  let area = areas.get(keyArea)\n  if (area === undefined) {\n    area = new Map()\n    areas.set(keyArea, area)\n  }\n\n  let store = area.get(key)\n  if (store !== undefined) {\n    return store\n  }\n\n  // @ts-expect-error due to old typings in import\n  store = createStore(null, { serialize: 'ignore' })\n  area.set(key, store)\n\n  return store\n}\n","import type { Subscription } from 'effector'\nimport type {\n  ConfigPersist,\n  ConfigSourceTarget,\n  ConfigStore,\n  Done,\n  Fail,\n  Finally,\n} from './types'\nimport {\n  clearNode,\n  createEffect,\n  createEvent,\n  createNode,\n  forward,\n  guard,\n  is,\n  sample,\n  withRegion,\n} from 'effector'\nimport { getAreaStorage } from './area'\n\n/**\n * Default sink for unhandled errors\n */\nconst sink = createEvent<Fail<any>>()\nsink.watch((payload) => console.error(payload.error))\n\n/**\n * Main `persist` function\n */\nexport function persist<State, Err = Error>({\n  adapter,\n  store,\n  source = store,\n  target = store,\n  clock = source,\n  done,\n  fail = sink,\n  finally: anyway,\n  pickup,\n  key: keyName,\n  keyPrefix = '',\n}: Partial<\n  ConfigPersist & ConfigStore<State, Err> & ConfigSourceTarget<State, Err>\n>): Subscription {\n  if (!adapter) {\n    throw Error('Adapter is not defined')\n  }\n  if (!source) {\n    throw Error('Store or source is not defined')\n  }\n  if (!target) {\n    throw Error('Target is not defined')\n  }\n  if (!keyName && source.shortName === (source as any).id) {\n    throw Error('Key or name is not defined')\n  }\n  if (source === target && !is.store(source)) {\n    throw Error('Source must be different from target')\n  }\n\n  const key = keyName || source.shortName\n  const storage = getAreaStorage<State>(\n    adapter.keyArea || adapter,\n    keyPrefix + key\n  )\n  const region = createNode()\n  const desist = () => clearNode(region)\n\n  const op =\n    (operation: 'get' | 'set') =>\n    ({ status, params, result, error }: any): any =>\n      status === 'done'\n        ? {\n            status,\n            key,\n            keyPrefix,\n            operation,\n            value: operation === 'get' ? result : params,\n          }\n        : {\n            status,\n            key,\n            keyPrefix,\n            operation,\n            value: params,\n            error,\n          }\n\n  // create all auxiliary units and nodes within the region,\n  // to be able to remove them all at once on unsubscription\n  withRegion(region, () => {\n    const getFx = createEffect<void, State, Err>()\n    const setFx = createEffect<State, void, Err>()\n\n    const localAnyway = createEvent<Finally<State, Err>>()\n    const localDone = localAnyway.filterMap<Done<State>>(\n      ({ status, key, keyPrefix, operation, value }) =>\n        status === 'done' ? { key, keyPrefix, operation, value } : undefined\n    )\n    const localFail = localAnyway.filterMap<Fail<Err>>(\n      ({ status, key, keyPrefix, operation, error, value }: any) =>\n        status === 'fail'\n          ? { key, keyPrefix, operation, error, value }\n          : undefined\n    )\n\n    const value = adapter<State>(keyPrefix + key, getFx)\n    getFx.use(value.get)\n    setFx.use(value.set)\n\n    const trigger = createEvent<State>()\n    sample({\n      source,\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      clock: clock!, // `clock` is always defined, as long as `source` is defined\n      target: trigger,\n    })\n\n    guard({\n      source: sample<State, State, [State, State]>(\n        storage,\n        trigger,\n        (current, proposed) => [proposed, current]\n      ),\n      filter: ([proposed, current]) => proposed !== current,\n      target: setFx.prepend<[State, State]>(([proposed]) => proposed),\n    })\n    forward({ from: [getFx.doneData, setFx], to: storage })\n    forward({ from: [getFx.doneData, storage], to: target })\n    forward({\n      from: [getFx.finally.map(op('get')), setFx.finally.map(op('set'))],\n      to: localAnyway,\n    })\n\n    forward({ from: localFail, to: fail })\n    if (done) forward({ from: localDone, to: done })\n    if (anyway) forward({ from: localAnyway, to: anyway })\n\n    if (pickup) {\n      // pick up value from storage ONLY on `pickup` update\n      forward({ from: pickup, to: getFx.prepend(() => undefined) })\n    } else {\n      // kick getter to pick up initial value from storage\n      getFx()\n    }\n  })\n\n  return (desist.unsubscribe = desist)\n}\n","import type { ConfigPersist, Persist } from './types'\nimport { persist as base } from './persist'\n\nexport type {\n  ConfigPersist,\n  ConfigSourceTarget,\n  ConfigStore,\n  Done,\n  Fail,\n  Finally,\n  Persist,\n  StorageAdapter,\n} from './types'\n\n/**\n * Creates custom `persist`\n */\nexport function createPersist(defaults?: ConfigPersist): Persist {\n  return (config) => base({ ...defaults, ...config })\n}\n\n/**\n * Default `persist`\n */\nexport const persist = createPersist()\n"],"names":["areas","Map","sink","createEvent","createPersist","defaults","config","adapter","store","source","target","clock","done","fail","finally","anyway","pickup","key","keyName","keyPrefix","Error","shortName","id","is","storage","keyArea","area","get","undefined","set","createStore","serialize","getAreaStorage","region","createNode","desist","clearNode","op","operation","status","params","result","error","value","withRegion","getFx","createEffect","setFx","localAnyway","localDone","filterMap","localFail","use","trigger","sample","guard","current","proposed","filter","prepend","forward","from","doneData","to","map","unsubscribe","base","watch","payload","console","persist"],"mappings":"qKAMA,IAAMA,EAAQ,IAAIC,ICmBZC,EAAOC,ICRN,SAASC,EAAcC,GAC5B,OAAQC,GDaH,UAAqCC,QAC1CA,EAD0CC,MAE1CA,EAF0CC,OAG1CA,EAASD,EAHiCE,OAI1CA,EAASF,EAJiCG,MAK1CA,EAAQF,EALkCG,KAM1CA,EAN0CC,KAO1CA,EAAOX,EACPY,QAASC,EARiCC,OAS1CA,EACAC,IAAKC,EAVqCC,UAW1CA,EAAY,KAIZ,IAAKZ,EACH,MAAMa,MAAM,0BAEd,IAAKX,EACH,MAAMW,MAAM,kCAEd,IAAKV,EACH,MAAMU,MAAM,yBAEd,IAAKF,GAAWT,EAAOY,YAAeZ,EAAea,GACnD,MAAMF,MAAM,8BAEd,GAAIX,IAAWC,IAAWa,EAAGf,MAAMC,GACjC,MAAMW,MAAM,wCAGd,IAAMH,EAAMC,GAAWT,EAAOY,UACxBG,EDpDD,SAA+BC,EAAcR,GAClD,IAAIS,EAAO1B,EAAM2B,IAAIF,QACRG,IAATF,IACFA,EAAO,IAAIzB,IACXD,EAAM6B,IAAIJ,EAASC,IAGrB,IAAIlB,EAAQkB,EAAKC,IAAIV,GACrB,YAAcW,IAAVpB,IAKJA,EAAQsB,EAAY,KAAM,CAAEC,UAAW,WACvCL,EAAKG,IAAIZ,EAAKT,IALLA,CAQV,CCmCiBwB,CACdzB,EAAQkB,SAAWlB,EACnBY,EAAYF,GAERgB,EAASC,IACTC,EAAS,IAAMC,EAAUH,GAEzBI,EACHC,GACD,EAAGC,SAAQC,SAAQC,SAAQC,WACd,SAAXH,EACI,CACEA,SACAtB,MACAE,YACAmB,YACAK,MAAqB,QAAdL,EAAsBG,EAASD,GAExC,CACED,SACAtB,MACAE,YACAmB,YACAK,MAAOH,EACPE,SA8DV,OAzDAE,EAAWX,GAAQ,KACjB,IAAMY,EAAQC,IACRC,EAAQD,IAERE,EAAc7C,IACd8C,EAAYD,EAAYE,WAC5B,EAAGX,SAAQtB,MAAKE,YAAWmB,YAAWK,WACzB,SAAXJ,EAAoB,CAAEtB,MAAKE,YAAWmB,YAAWK,cAAUf,IAEzDuB,EAAYH,EAAYE,WAC5B,EAAGX,SAAQtB,MAAKE,YAAWmB,YAAWI,QAAOC,WAChC,SAAXJ,EACI,CAAEtB,MAAKE,YAAWmB,YAAWI,QAAOC,cACpCf,IAGFe,EAAQpC,EAAeY,EAAYF,EAAK4B,GAC9CA,EAAMO,IAAIT,EAAMhB,KAChBoB,EAAMK,IAAIT,EAAMd,KAEhB,IAAMwB,EAAUlD,IAChBmD,EAAO,CACL7C,SAEAE,MAAOA,EACPD,OAAQ2C,IAGVE,EAAM,CACJ9C,OAAQ6C,EACN9B,EACA6B,GACA,CAACG,EAASC,IAAa,CAACA,EAAUD,KAEpCE,OAAQ,EAAED,EAAUD,KAAaC,IAAaD,EAC9C9C,OAAQqC,EAAMY,SAAwB,EAAEF,KAAcA,MAExDG,EAAQ,CAAEC,KAAM,CAAChB,EAAMiB,SAAUf,GAAQgB,GAAIvC,IAC7CoC,EAAQ,CAAEC,KAAM,CAAChB,EAAMiB,SAAUtC,GAAUuC,GAAIrD,IAC/CkD,EAAQ,CACNC,KAAM,CAAChB,EAAM/B,QAAQkD,IAAI3B,EAAG,QAASU,EAAMjC,QAAQkD,IAAI3B,EAAG,SAC1D0B,GAAIf,IAGNY,EAAQ,CAAEC,KAAMV,EAAWY,GAAIlD,IAC3BD,GAAMgD,EAAQ,CAAEC,KAAMZ,EAAWc,GAAInD,IACrCG,GAAQ6C,EAAQ,CAAEC,KAAMb,EAAae,GAAIhD,IAEzCC,EAEF4C,EAAQ,CAAEC,KAAM7C,EAAQ+C,GAAIlB,EAAMc,SAAQ,KAAd,MAG5Bd,GACD,IAGKV,EAAO8B,YAAc9B,CAC9B,CCpIoB+B,CAAK,IAAK7D,KAAaC,GAC3C,CDODJ,EAAKiE,OAAOC,GAAYC,QAAQ3B,MAAM0B,EAAQ1B,SCFjC4B,IAAAA,EAAUlE"}